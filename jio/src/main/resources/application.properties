spring.jpa.hibernate.ddl-auto=create-drop
# use create drop if want to reset db
# use update for deployment
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.mvc.dispatch-options-request=true
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

############# UNCOMMENT FOR DEV ##############
spring.datasource.url=jdbc:mysql://localhost:3307/openjio1
spring.datasource.username=root
spring.datasource.password=${INTEGRATION_ROOT_PASSWORD} 

############# UNCOMMENT FOR PROD ##############
# spring.datasource.url=jdbc:mysql://${DATABASE_HOST}/openjio
# spring.datasource.username=${DATABASE_USERNAME}
# spring.datasource.password=${DATABASE_PASSWORD}

#spring.security.user.name=user
#spring.security.user.password=user
spring.servlet.multipart.max-file-size=10MB
file.upload.directory=${user.dir}/images/

############# MAIL ##############

spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.office365.com

##############S3##################
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.stack.auto=false
application.bucket.name=${AWS_S3_BUCKET_NAME}
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2MB
spring.servlet.multipart.max-request-size=10MB
